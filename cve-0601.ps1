$server_ou = (Get-ADOrganizationalUnit -Filter 'Name -like "Servers"').DistinguishedName 
$computers = Get-ADComputer -SearchBase $server_ou -Filter *
$server_Name = ''
$failed_connections = 'C:\failed_connections'

if(!(test-path $failed_connections ))
{
    MD $failed_connections
}



ForEach($item in $computers.name)
{
    Write-Output "Connecting to: $item"
   
    try
    {
        $session = New-PSSession $item
    }
    catch [System.Management.Automation.Remoting.PSRemotingTransportException]
    {
        Write-Host "Failed to connect to host $item.."
        $item | out-file "$failed_connections\failed_connections.txt" -Append
        continue
    }
    
    Invoke-Command -ScriptBlock  { mkdir c:\cve-2020-0601 } -ComputerName $item  

    $build_number = invoke-command -ScriptBlock  {[System.Environment]::OSVersion.Version.build} -ComputerName $item
    if($build_number -eq '14393')
    {
        # copy and install windows 2016 patch
    }
    elseif ($build_number -eq '17763' ) 
    {
        # copy and install windows 2019 patch
    }

    

    # To avoid having to use Credssp and fall foul of the double hop issue
    copy-item \\$server_Name\SEP\sep.exe c:\sep -ToSession $session

    $result = Invoke-Command -ScriptBlock  {
        
        if(!(Test-Path "C:\Program Files (x86)\Symantec\Symantec Endpoint Protection"))
        {
            Write-Host "installing SEP"
            Start-Process "c:\sep\sep.exe" -Wait
            
        }
        
        if(Test-Path 'c:\sep' )
        {Remove-Item c:\sep -Recurse -force }
       
    } -ComputerName $item
    $result
    Remove-PSSession $session
}